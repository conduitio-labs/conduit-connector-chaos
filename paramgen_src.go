// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package chaos

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	SourceConfigAckMode       = "ackMode"
	SourceConfigConfigureMode = "configureMode"
	SourceConfigOpenMode      = "openMode"
	SourceConfigReadMode      = "readMode"
	SourceConfigTeardownMode  = "teardownMode"
)

func (SourceConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		SourceConfigAckMode: {
			Default:     "success",
			Description: "AckMode controls what the Ack method should do.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"success", "error", "context-done", "block", "panic"}},
			},
		},
		SourceConfigConfigureMode: {
			Default:     "success",
			Description: "ConfigureMode controls what the Configure method should do.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"success", "error", "context-done", "block", "panic"}},
			},
		},
		SourceConfigOpenMode: {
			Default:     "success",
			Description: "OpenMode controls what the Open method should do.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"success", "error", "context-done", "block", "panic"}},
			},
		},
		SourceConfigReadMode: {
			Default:     "success",
			Description: "ReadMode controls what the Read method should do.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"success", "error", "context-done", "block", "panic"}},
			},
		},
		SourceConfigTeardownMode: {
			Default:     "success",
			Description: "TeardownMode controls what the Teardown method should do.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"success", "error", "context-done", "block", "panic"}},
			},
		},
	}
}
